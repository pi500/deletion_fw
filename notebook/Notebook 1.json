{
	"name": "Notebook 1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "mypool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "6f062d14-ec2d-455d-9cf5-e69bdfcfebc1"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/7374728e-d82a-4420-8e42-c2f7ef16e4c3/resourceGroups/mygrp/providers/Microsoft.Synapse/workspaces/workspace7971/bigDataPools/mypool",
				"name": "mypool",
				"type": "Spark",
				"endpoint": "https://workspace7971.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mypool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.3",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": false
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"#loc = f'abfss://historical@myadls8434/new/{file_name}'\r\n",
					"loc = f'abfss://historical@myadls8434/new/data_master.json'\r\n",
					"print(loc)\r\n",
					""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"\r\n",
					"adls_path = \"adl://myadls8434.azuredatalakestore.net/historical/new/your/data_master.json\"\r\n",
					"#loc = f'abfss://historical@myadls8434/new/data_master.json'\r\n",
					"# Read JSON file into a DataFrame\r\n",
					"df = spark.read.json(adls_path)\r\n",
					"\r\n",
					"# Show DataFrame schema and some sample data\r\n",
					"df.printSchema()\r\n",
					"df.show()\r\n",
					""
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Import necessary libraries\r\n",
					"from pyspark.sql import SparkSession\r\n",
					"\r\n",
					"# Create a Spark session\r\n",
					"\r\n",
					"\r\n",
					"# Define the path to your JSON file in Azure Storage\r\n",
					"file_path = \"abfss://historical@myadls8434.dfs.core.windows.net/new/delete_master.json\"\r\n",
					"\r\n",
					"# Read JSON file into DataFrame\r\n",
					"df = spark.read.json(file_path)\r\n",
					"\r\n",
					"# Show DataFrame schema and some data\r\n",
					"df.printSchema()\r\n",
					"df.show()\r\n",
					""
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.types import *\r\n",
					"schema1 = StructType([\\\r\n",
					"    StructField('data_node',StringType()),\\\r\n",
					"    StructField('data_product',StringType()),\\\r\n",
					"    StructField('data_table',StringType()),\\\r\n",
					"    StructField('record_type',StringType()),\\\r\n",
					"    StructField('container',StringType())])\r\n",
					"file_path = \"abfss://historical@myadls8434.dfs.core.windows.net/new/data_master.json\"\r\n",
					"data = [\r\n",
					"\t{\r\n",
					"\"data_node\" : \"IPN\",\r\n",
					"\"data_product\" : \"InvolvedParty\",\r\n",
					"\"data_table\" : \"PERSON\",\r\n",
					"\"record_type\" : \"Customer\",\r\n",
					"\"container\" : \"historical\"\r\n",
					"}\r\n",
					"]\r\n",
					"# Read JSON file into DataFrame\r\n",
					"#df = spark.read.json(file_path)\r\n",
					"df= spark.createDataFrame(data,schema1)\r\n",
					"\r\n",
					"# Show DataFrame schema and some data\r\n",
					"df.printSchema()\r\n",
					"df.show()"
				],
				"execution_count": 22
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}